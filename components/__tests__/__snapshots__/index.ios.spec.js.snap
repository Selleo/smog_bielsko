exports[`smog_bielsko renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    style={
        Object {
            "backgroundColor": "white",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "space-around",
          }
    }>
    <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
            Object {
                "fontSize": 18,
                "textAlign": "center",
              }
        }>
        Loading
    </Text>
</View>,
  "nodes": Array [
    <View
      style={
            Object {
                  "backgroundColor": "white",
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "space-around",
                }
      }>
      <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
                  Object {
                        "fontSize": 18,
                        "textAlign": "center",
                      }
            }>
            Loading
      </Text>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <SmogBielsko />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": SmogBielsko {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "routes": Array [
          Object {
            "id": "index",
          },
        ],
        "state": Object {
          "isOpen": false,
          "pendingApp": true,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          style={
                    Object {
                              "backgroundColor": "white",
                              "flex": 1,
                              "flexDirection": "column",
                              "justifyContent": "space-around",
                            }
          }>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Object {
                                        "fontSize": 18,
                                        "textAlign": "center",
                                      }
                    }>
                    Loading
          </Text>
</View>,
        "_debugID": 2,
        "_renderedOutput": <View
          style={
                    Object {
                              "backgroundColor": "white",
                              "flex": 1,
                              "flexDirection": "column",
                              "justifyContent": "space-around",
                            }
          }>
          <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                              Object {
                                        "fontSize": 18,
                                        "textAlign": "center",
                                      }
                    }>
                    Loading
          </Text>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SmogBielsko />,
}
`;
